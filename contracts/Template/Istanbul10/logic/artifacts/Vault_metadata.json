{
	"compiler": {
		"version": "0.8.15+commit.e14f2714"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "redeemer",
						"type": "address"
					}
				],
				"name": "Redeem",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "WETH",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "nft",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "nftId",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amount",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "weight_",
						"type": "uint256"
					}
				],
				"name": "depositNFTAsset",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDivision",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getEntireVaultActivity",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getEntireVaultState",
				"outputs": [
					{
						"internalType": "enum State.NftState",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFreedomNFT",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nft",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "nftId",
						"type": "uint256"
					}
				],
				"name": "getNftActivity",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nft",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "nftId",
						"type": "uint256"
					}
				],
				"name": "getNftState",
				"outputs": [
					{
						"internalType": "enum State.NftState",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getVeToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "initializer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "nftIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "nfts",
				"outputs": [
					{
						"internalType": "address",
						"name": "nft",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "nftId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "enum State.NftType",
						"name": "mold",
						"type": "uint8"
					},
					{
						"internalType": "enum State.NftState",
						"name": "state",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "activity",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "weight",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "noncallable",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onERC1155BatchReceived",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onERC1155Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onERC721Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "redeem",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "redeemable",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "router",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nft",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "nftId",
						"type": "uint256"
					},
					{
						"internalType": "enum State.NftState",
						"name": "newState",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "activity",
						"type": "string"
					}
				],
				"name": "safeSetState",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "sendERC20",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "who",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "sendETH",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "nft",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "nftId",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "sendNFTAsset",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "index",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "sendNFTAssetIndex",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "who",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "sendWETH",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "updataTemplate",
						"type": "address"
					}
				],
				"name": "updateVault",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"redeem()": {
					"notice": "an external function to burn all ERC20 tokens to receive the ERC721 token"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Template/Istanbul10/logic/Vault.sol": "Vault"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
			"keccak256": "0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079",
			"license": "MIT",
			"urls": [
				"bzz-raw://2db9d720fadb1315ba64790815f9f1d80237cca584fc530b8906519bd46ff4cc",
				"dweb:/ipfs/QmXQSGPuGHG5e9ZRVbcUymP3B78cn6ZjfaiaEwd3P3yBCF"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
			"license": "MIT",
			"urls": [
				"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
				"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428",
			"license": "MIT",
			"urls": [
				"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7",
				"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol": {
			"keccak256": "0xa3c1d99239060855105fa0ad23c710be3c8db7013c470c48e2450f416312fd98",
			"license": "MIT",
			"urls": [
				"bzz-raw://f4b10129decc6c6c029925e26575bf8331d352d958bd9159c5fc23e191734438",
				"dweb:/ipfs/QmTJfZF118nDmaT3LrwuLgwtFT2AQs7PKGqNQhzdC6aJjA"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4",
			"license": "MIT",
			"urls": [
				"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6",
				"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx"
			]
		},
		"contracts/Interface/IDivision.sol": {
			"keccak256": "0xff66ef0bc2803b618e0e3f9a3eb08754ffd3b2841c6e9f2e82781193654f1367",
			"license": "MIT",
			"urls": [
				"bzz-raw://dcae343310256552d4f1b39497cbf3a165164a9cb88f7cc6e3a90455a0cdd061",
				"dweb:/ipfs/QmQ9pRRw4LzoKFuq5hW5HCzSFLRkFJ2hNPFiwobaYSBJJg"
			]
		},
		"contracts/Interface/IFactory.sol": {
			"keccak256": "0xbce257d73242df6e8535b9fb5b290998c202d0e92e0506ceba661ba92ba1098b",
			"license": "MIT",
			"urls": [
				"bzz-raw://a24a31faa9305da04095e4e10dada2b6859bde9fa5ea86a962b7837bd258684d",
				"dweb:/ipfs/QmeJ3BpJ1ZCAAK7svctCK22pMEeczqkjWcwGQGhZPEBbz3"
			]
		},
		"contracts/Interface/ISettings.sol": {
			"keccak256": "0x4960456f01f02fe14b95416b251a8471a7352cdb2f7d259a2ca6b49eabbe9ef1",
			"license": "MIT",
			"urls": [
				"bzz-raw://eae30b8166a2a5dcc0f1f6e6e63bdcae9675283bef72a0e1093d8e12718fe7eb",
				"dweb:/ipfs/QmTQirnMe2VE8Dv2Y3ki4b34yGU6sttV4wh73FyzK469KH"
			]
		},
		"contracts/Interface/IWETH.sol": {
			"keccak256": "0xfae6da585f167761591d742c5a26c5d67aba849fcc5c0a2daf520296354821ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://1eaca51e382deac1e4efb67dfe92a24d6c671e8c79d59f78a659000c5305440a",
				"dweb:/ipfs/QmbqXEiaeKxBbnDjuVekBQs2KTCYLU3HXZanf6T5Dzr94x"
			]
		},
		"contracts/Template/Istanbul10/Interface/IRouterData.sol": {
			"keccak256": "0xf1f05cbaaa89d71bc191302722ff968a14e10b9aa694109a66ec669252c1e8ac",
			"license": "MIT",
			"urls": [
				"bzz-raw://00e70066c47e5c69dc13ccf7d6e1865d60edf42e4e0f5d34f585dfe219515add",
				"dweb:/ipfs/QmRMs4iZdig5A7AwP9kPnoh1Mbp3ecmnx9qCqBypYNHYaz"
			]
		},
		"contracts/Template/Istanbul10/Interface/IVault.sol": {
			"keccak256": "0x5b83c535f50b97ad8faea93cb68d70b0c8e16364739d790baf072587d491c455",
			"license": "MIT",
			"urls": [
				"bzz-raw://6fd6115e56c0ca80f30ac5047a9764a5d85d6b892c5d3a06fd9c70c180992225",
				"dweb:/ipfs/Qmf2XsXJdXE5pGdZFgz4otpyHXyT3d4ax56aG5oWBHW3M5"
			]
		},
		"contracts/Template/Istanbul10/Interface/IVaultData.sol": {
			"keccak256": "0x05af14dc845e33c84db28cd0a6fdc39562b5360373ce45186bb76096403fa260",
			"license": "MIT",
			"urls": [
				"bzz-raw://d62e92012fbdf73710ad578f9a56aac43d5fd4477d4cf81f306ffd86fdebbf1a",
				"dweb:/ipfs/Qme3XAMLFzW19GGTFmSpw6nySSHMsNXXLRtGYm1MPaEtwi"
			]
		},
		"contracts/Template/Istanbul10/Interface/IVeToken.sol": {
			"keccak256": "0x0c2e00e3fb14d024b117c943c111e75e8b82932c434e4e69cbd1e7e70e0263fe",
			"license": "MIT",
			"urls": [
				"bzz-raw://9a201b844427328085ce095b7a8276fd0314c56b5d1b88bf4ddb320a3ada432d",
				"dweb:/ipfs/QmTFiDJUoFgqLwBnB5udNMbyqfyYTDMbGQHe4LZpVKmei1"
			]
		},
		"contracts/Template/Istanbul10/data/VaultData.sol": {
			"keccak256": "0xa07fe01f754c8df2738847f95a3bc32c6e1f776fcf78b626ca624c474251e996",
			"license": "MIT",
			"urls": [
				"bzz-raw://7badf4e455556929077c37930525adb910505473a708ec77137a53b778db3c96",
				"dweb:/ipfs/QmSBXxRNK92bmPg1d1xfJWHtdw9ax8qx9LpyeXCoXH1zgw"
			]
		},
		"contracts/Template/Istanbul10/logic/Vault.sol": {
			"keccak256": "0x9e03eb848cda364ab23c526f8be78d138cfd963fdff2941d02699d50fe27f54d",
			"license": "MIT",
			"urls": [
				"bzz-raw://a997321dd44b512919fbb3e3fd3d2a5af516ffb61036f60ba78069e64e5d0395",
				"dweb:/ipfs/QmT8DcUDddAtVFr6WMexFaeWcfBYVBgpTmDFbsK82yo6ag"
			]
		},
		"contracts/utils/State.sol": {
			"keccak256": "0xfd9df2ec38b6b962ce03db54d8b44fcfa334dcb94ddba838c39f28587db3020b",
			"license": "MIT",
			"urls": [
				"bzz-raw://29ade40c10450b2799962f6430ac157d21b026c75dddbd3819d77e7059036958",
				"dweb:/ipfs/QmQcVKi3a2uo92NEdeLj4r37dJb3Ztfef3RdQeueDWWRzU"
			]
		}
	},
	"version": 1
}