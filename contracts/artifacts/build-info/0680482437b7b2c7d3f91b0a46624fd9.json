{
	"id": "0680482437b7b2c7d3f91b0a46624fd9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/InitializedProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.0;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\";\r\n/**\r\n * @title InitializedProxy\r\n * @author Anna Carroll\r\n */\r\ncontract InitializedProxy {\r\n    // address of logic contract\r\n    // slot bytes32(uint256(keccak256('EIP1967.PROXY.CONFTI.IMPLEMENTATION')) - 1)\r\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x5f62ce3c9aebd463c7a36ab1b244d2bb94f07a2c13889b3b687940ebc467b9b3;\r\n\r\n    // ======== Constructor =========\r\n    constructor(\r\n        address logic,\r\n        bytes memory initializationCalldata\r\n    ) { \r\n        require(logic != address(0),\"Proxy :: Logical contracts cannot be zero addresses\");\r\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = logic;\r\n        // Delegatecall into the logic contract, supplying initialization calldata\r\n        (bool _ok, bytes memory returnData) =\r\n            logic.delegatecall(initializationCalldata);\r\n        // Revert if delegatecall to implementation reverts\r\n        require(_ok, string(returnData));\r\n    }\r\n     \r\n\r\n    // ======== Fallback =========\r\n\r\n    fallback() external payable {\r\n        address _impl = StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            calldatacopy(ptr, 0, calldatasize())\r\n            let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)\r\n            let size := returndatasize()\r\n            returndatacopy(ptr, 0, size)\r\n\r\n            switch result\r\n                case 0 {\r\n                    revert(ptr, size)\r\n                }\r\n                default {\r\n                    return(ptr, size)\r\n                }\r\n        }\r\n    }\r\n\r\n    // ======== Receive =========\r\n\r\n    receive() external payable {} // solhint-disable-line no-empty-blocks\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"StorageSlotUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1207:2437  library StorageSlotUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1207:2437  library StorageSlotUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207b9047b74f42af2409616e23572df6852f7451c92c699078a8fd0988f04b7e5264736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b9047b74f42af2409616e23572df6852f7451c92c699078a8fd0988f04b7e5264736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x9047B74F42AF2409616E23572DF6852F7451C92C699078A8FD0988F0 0x4B PUSH31 0x5264736F6C6343000800003300000000000000000000000000000000000000 ",
							"sourceMap": "1207:1230:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b9047b74f42af2409616e23572df6852f7451c92c699078a8fd0988f04b7e5264736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x9047B74F42AF2409616E23572DF6852F7451C92C699078A8FD0988F0 0x4B PUSH31 0x5264736F6C6343000800003300000000000000000000000000000000000000 ",
							"sourceMap": "1207:1230:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1207,
									"end": 2437,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207b9047b74f42af2409616e23572df6852f7451c92c699078a8fd0988f04b7e5264736f6c63430008000033",
									".code": [
										{
											"begin": 1207,
											"end": 2437,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 2437,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 2437,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 2437,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1207,
											"end": 2437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 2437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 2437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 2437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 2437,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc15eeb888d421aa4dedf46768a0502590d88911cfe5750d3ab9f644a7e5ada95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f270653fd8d1a109e3e3aa77d5035a52f175b66604f924e0db1f71a5b38e708\",\"dweb:/ipfs/QmNiP7PvV47ahSvMwxCifeUExVNhyVXdd8Zu2hGz4XC32j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/InitializedProxy.sol": {
				"InitializedProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "initializationCalldata",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "Anna Carroll",
						"kind": "dev",
						"methods": {},
						"title": "InitializedProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/InitializedProxy.sol\":202:1861  contract InitializedProxy {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/InitializedProxy.sol\":516:1083  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/InitializedProxy.sol\":642:643  0 */\n  0x00\n    /* \"contracts/InitializedProxy.sol\":625:644  logic != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/InitializedProxy.sol\":625:630  logic */\n  dup3\n    /* \"contracts/InitializedProxy.sol\":625:644  logic != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/InitializedProxy.sol\":617:699  require(logic != address(0),\"Proxy :: Logical contracts cannot be zero addresses\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/InitializedProxy.sol\":778:783  logic */\n  dup2\n    /* \"contracts/InitializedProxy.sol\":710:769  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT) */\n  tag_9\n    /* \"contracts/InitializedProxy.sol\":402:468  0x5f62ce3c9aebd463c7a36ab1b244d2bb94f07a2c13889b3b687940ebc467b9b3 */\n  0x5f62ce3c9aebd463c7a36ab1b244d2bb94f07a2c13889b3b687940ebc467b9b3\n    /* \"contracts/InitializedProxy.sol\":748:768  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"contracts/InitializedProxy.sol\":710:747  StorageSlotUpgradeable.getAddressSlot */\n  or(tag_0_8, shl(0x20, tag_10))\n    /* \"contracts/InitializedProxy.sol\":710:769  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/InitializedProxy.sol\":710:775  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n  0x00\n  add\n  0x00\n    /* \"contracts/InitializedProxy.sol\":710:783  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = logic */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/InitializedProxy.sol\":879:887  bool _ok */\n  0x00\n    /* \"contracts/InitializedProxy.sol\":889:912  bytes memory returnData */\n  dup1\n    /* \"contracts/InitializedProxy.sol\":929:934  logic */\n  dup4\n    /* \"contracts/InitializedProxy.sol\":929:947  logic.delegatecall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/InitializedProxy.sol\":948:970  initializationCalldata */\n  dup4\n    /* \"contracts/InitializedProxy.sol\":929:971  logic.delegatecall(initializationCalldata) */\n  mload(0x40)\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_15\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_14)\ntag_15:\n  0x60\n  swap2\n  pop\ntag_14:\n  pop\n    /* \"contracts/InitializedProxy.sol\":878:971  (bool _ok, bytes memory returnData) =\r... */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"contracts/InitializedProxy.sol\":1051:1054  _ok */\n  dup2\n    /* \"contracts/InitializedProxy.sol\":1063:1073  returnData */\n  dup2\n    /* \"contracts/InitializedProxy.sol\":1043:1075  require(_ok, string(returnData)) */\n  swap1\n  tag_16\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n  pop\n    /* \"contracts/InitializedProxy.sol\":516:1083  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/InitializedProxy.sol\":202:1861  contract InitializedProxy {\r... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1553:1700  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1614:1635  AddressSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1680:1684  slot */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1670:1684  r.slot := slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1656:1694  {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:358   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":120:184   */\n  tag_24\n    /* \"#utility.yul\":135:183   */\n  tag_25\n    /* \"#utility.yul\":176:182   */\n  dup5\n    /* \"#utility.yul\":135:183   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":120:184   */\n  tag_27\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":111:184   */\n  swap1\n  pop\n    /* \"#utility.yul\":207:213   */\n  dup3\n    /* \"#utility.yul\":200:205   */\n  dup2\n    /* \"#utility.yul\":193:214   */\n  mstore\n    /* \"#utility.yul\":245:249   */\n  0x20\n    /* \"#utility.yul\":238:243   */\n  dup2\n    /* \"#utility.yul\":234:250   */\n  add\n    /* \"#utility.yul\":283:286   */\n  dup5\n    /* \"#utility.yul\":274:280   */\n  dup5\n    /* \"#utility.yul\":269:272   */\n  dup5\n    /* \"#utility.yul\":265:281   */\n  add\n    /* \"#utility.yul\":262:287   */\n  gt\n    /* \"#utility.yul\":259:261   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":300:301   */\n  0x00\n    /* \"#utility.yul\":297:298   */\n  dup1\n    /* \"#utility.yul\":290:302   */\n  revert\n    /* \"#utility.yul\":259:261   */\ntag_28:\n    /* \"#utility.yul\":313:352   */\n  tag_29\n    /* \"#utility.yul\":345:351   */\n  dup5\n    /* \"#utility.yul\":340:343   */\n  dup3\n    /* \"#utility.yul\":335:338   */\n  dup6\n    /* \"#utility.yul\":313:352   */\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":101:358   */\n  pop\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":364:507   */\ntag_31:\n  0x00\n    /* \"#utility.yul\":452:458   */\n  dup2\n    /* \"#utility.yul\":446:459   */\n  mload\n    /* \"#utility.yul\":437:459   */\n  swap1\n  pop\n    /* \"#utility.yul\":468:501   */\n  tag_33\n    /* \"#utility.yul\":495:500   */\n  dup2\n    /* \"#utility.yul\":468:501   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":427:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":526:812   */\ntag_35:\n  0x00\n    /* \"#utility.yul\":641:644   */\n  dup3\n    /* \"#utility.yul\":634:638   */\n  0x1f\n    /* \"#utility.yul\":626:632   */\n  dup4\n    /* \"#utility.yul\":622:639   */\n  add\n    /* \"#utility.yul\":618:645   */\n  slt\n    /* \"#utility.yul\":608:610   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":659:660   */\n  0x00\n    /* \"#utility.yul\":656:657   */\n  dup1\n    /* \"#utility.yul\":649:661   */\n  revert\n    /* \"#utility.yul\":608:610   */\ntag_37:\n    /* \"#utility.yul\":692:698   */\n  dup2\n    /* \"#utility.yul\":686:699   */\n  mload\n    /* \"#utility.yul\":717:806   */\n  tag_38\n    /* \"#utility.yul\":802:805   */\n  dup5\n    /* \"#utility.yul\":794:800   */\n  dup3\n    /* \"#utility.yul\":787:791   */\n  0x20\n    /* \"#utility.yul\":779:785   */\n  dup7\n    /* \"#utility.yul\":775:792   */\n  add\n    /* \"#utility.yul\":717:806   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":708:806   */\n  swap2\n  pop\n    /* \"#utility.yul\":598:812   */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":818:1362   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":963:965   */\n  0x40\n    /* \"#utility.yul\":951:960   */\n  dup4\n    /* \"#utility.yul\":942:949   */\n  dup6\n    /* \"#utility.yul\":938:961   */\n  sub\n    /* \"#utility.yul\":934:966   */\n  slt\n    /* \"#utility.yul\":931:933   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":979:980   */\n  0x00\n    /* \"#utility.yul\":976:977   */\n  dup1\n    /* \"#utility.yul\":969:981   */\n  revert\n    /* \"#utility.yul\":931:933   */\ntag_40:\n    /* \"#utility.yul\":1022:1023   */\n  0x00\n    /* \"#utility.yul\":1047:1111   */\n  tag_41\n    /* \"#utility.yul\":1103:1110   */\n  dup6\n    /* \"#utility.yul\":1094:1100   */\n  dup3\n    /* \"#utility.yul\":1083:1092   */\n  dup7\n    /* \"#utility.yul\":1079:1101   */\n  add\n    /* \"#utility.yul\":1047:1111   */\n  tag_31\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1037:1111   */\n  swap3\n  pop\n    /* \"#utility.yul\":993:1121   */\n  pop\n    /* \"#utility.yul\":1181:1183   */\n  0x20\n    /* \"#utility.yul\":1170:1179   */\n  dup4\n    /* \"#utility.yul\":1166:1184   */\n  add\n    /* \"#utility.yul\":1160:1185   */\n  mload\n    /* \"#utility.yul\":1212:1230   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1204:1210   */\n  dup2\n    /* \"#utility.yul\":1201:1231   */\n  gt\n    /* \"#utility.yul\":1198:1200   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1241:1242   */\n  dup1\n    /* \"#utility.yul\":1234:1246   */\n  revert\n    /* \"#utility.yul\":1198:1200   */\ntag_42:\n    /* \"#utility.yul\":1272:1345   */\n  tag_43\n    /* \"#utility.yul\":1337:1344   */\n  dup6\n    /* \"#utility.yul\":1328:1334   */\n  dup3\n    /* \"#utility.yul\":1317:1326   */\n  dup7\n    /* \"#utility.yul\":1313:1335   */\n  add\n    /* \"#utility.yul\":1272:1345   */\n  tag_35\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1262:1345   */\n  swap2\n  pop\n    /* \"#utility.yul\":1131:1355   */\n  pop\n    /* \"#utility.yul\":921:1362   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1368:1741   */\ntag_44:\n  0x00\n    /* \"#utility.yul\":1500:1538   */\n  tag_46\n    /* \"#utility.yul\":1532:1537   */\n  dup3\n    /* \"#utility.yul\":1500:1538   */\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1554:1642   */\n  tag_48\n    /* \"#utility.yul\":1635:1641   */\n  dup2\n    /* \"#utility.yul\":1630:1633   */\n  dup6\n    /* \"#utility.yul\":1554:1642   */\n  tag_49\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1547:1642   */\n  swap4\n  pop\n    /* \"#utility.yul\":1651:1703   */\n  tag_50\n    /* \"#utility.yul\":1696:1702   */\n  dup2\n    /* \"#utility.yul\":1691:1694   */\n  dup6\n    /* \"#utility.yul\":1684:1688   */\n  0x20\n    /* \"#utility.yul\":1677:1682   */\n  dup7\n    /* \"#utility.yul\":1673:1689   */\n  add\n    /* \"#utility.yul\":1651:1703   */\n  tag_30\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1728:1734   */\n  dup1\n    /* \"#utility.yul\":1723:1726   */\n  dup5\n    /* \"#utility.yul\":1719:1735   */\n  add\n    /* \"#utility.yul\":1712:1735   */\n  swap2\n  pop\n    /* \"#utility.yul\":1476:1741   */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1747:2111   */\ntag_51:\n  0x00\n    /* \"#utility.yul\":1863:1902   */\n  tag_53\n    /* \"#utility.yul\":1896:1901   */\n  dup3\n    /* \"#utility.yul\":1863:1902   */\n  tag_54\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1918:1989   */\n  tag_55\n    /* \"#utility.yul\":1982:1988   */\n  dup2\n    /* \"#utility.yul\":1977:1980   */\n  dup6\n    /* \"#utility.yul\":1918:1989   */\n  tag_56\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1911:1989   */\n  swap4\n  pop\n    /* \"#utility.yul\":1998:2050   */\n  tag_57\n    /* \"#utility.yul\":2043:2049   */\n  dup2\n    /* \"#utility.yul\":2038:2041   */\n  dup6\n    /* \"#utility.yul\":2031:2035   */\n  0x20\n    /* \"#utility.yul\":2024:2029   */\n  dup7\n    /* \"#utility.yul\":2020:2036   */\n  add\n    /* \"#utility.yul\":1998:2050   */\n  tag_30\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2075:2104   */\n  tag_58\n    /* \"#utility.yul\":2097:2103   */\n  dup2\n    /* \"#utility.yul\":2075:2104   */\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2070:2073   */\n  dup5\n    /* \"#utility.yul\":2066:2105   */\n  add\n    /* \"#utility.yul\":2059:2105   */\n  swap2\n  pop\n    /* \"#utility.yul\":1839:2111   */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2117:2500   */\ntag_60:\n  0x00\n    /* \"#utility.yul\":2280:2347   */\n  tag_62\n    /* \"#utility.yul\":2344:2346   */\n  0x33\n    /* \"#utility.yul\":2339:2342   */\n  dup4\n    /* \"#utility.yul\":2280:2347   */\n  tag_56\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2273:2347   */\n  swap2\n  pop\n    /* \"#utility.yul\":2377:2411   */\n  0x50726f7879203a3a204c6f676963616c20636f6e7472616374732063616e6e6f\n    /* \"#utility.yul\":2373:2374   */\n  0x00\n    /* \"#utility.yul\":2368:2371   */\n  dup4\n    /* \"#utility.yul\":2364:2375   */\n  add\n    /* \"#utility.yul\":2357:2412   */\n  mstore\n    /* \"#utility.yul\":2443:2464   */\n  0x74206265207a65726f2061646472657373657300000000000000000000000000\n    /* \"#utility.yul\":2438:2440   */\n  0x20\n    /* \"#utility.yul\":2433:2436   */\n  dup4\n    /* \"#utility.yul\":2429:2441   */\n  add\n    /* \"#utility.yul\":2422:2465   */\n  mstore\n    /* \"#utility.yul\":2491:2493   */\n  0x40\n    /* \"#utility.yul\":2486:2489   */\n  dup3\n    /* \"#utility.yul\":2482:2494   */\n  add\n    /* \"#utility.yul\":2475:2494   */\n  swap1\n  pop\n    /* \"#utility.yul\":2263:2500   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2506:2777   */\ntag_12:\n  0x00\n    /* \"#utility.yul\":2658:2751   */\n  tag_64\n    /* \"#utility.yul\":2747:2750   */\n  dup3\n    /* \"#utility.yul\":2738:2744   */\n  dup5\n    /* \"#utility.yul\":2658:2751   */\n  tag_44\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2651:2751   */\n  swap2\n  pop\n    /* \"#utility.yul\":2768:2771   */\n  dup2\n    /* \"#utility.yul\":2761:2771   */\n  swap1\n  pop\n    /* \"#utility.yul\":2640:2777   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2783:3096   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":2934:2936   */\n  0x20\n    /* \"#utility.yul\":2923:2932   */\n  dup3\n    /* \"#utility.yul\":2919:2937   */\n  add\n    /* \"#utility.yul\":2911:2937   */\n  swap1\n  pop\n    /* \"#utility.yul\":2983:2992   */\n  dup2\n    /* \"#utility.yul\":2977:2981   */\n  dup2\n    /* \"#utility.yul\":2973:2993   */\n  sub\n    /* \"#utility.yul\":2969:2970   */\n  0x00\n    /* \"#utility.yul\":2958:2967   */\n  dup4\n    /* \"#utility.yul\":2954:2971   */\n  add\n    /* \"#utility.yul\":2947:2994   */\n  mstore\n    /* \"#utility.yul\":3011:3089   */\n  tag_66\n    /* \"#utility.yul\":3084:3088   */\n  dup2\n    /* \"#utility.yul\":3075:3081   */\n  dup5\n    /* \"#utility.yul\":3011:3089   */\n  tag_51\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":3003:3089   */\n  swap1\n  pop\n    /* \"#utility.yul\":2901:3096   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3102:3521   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":3306:3308   */\n  0x20\n    /* \"#utility.yul\":3295:3304   */\n  dup3\n    /* \"#utility.yul\":3291:3309   */\n  add\n    /* \"#utility.yul\":3283:3309   */\n  swap1\n  pop\n    /* \"#utility.yul\":3355:3364   */\n  dup2\n    /* \"#utility.yul\":3349:3353   */\n  dup2\n    /* \"#utility.yul\":3345:3365   */\n  sub\n    /* \"#utility.yul\":3341:3342   */\n  0x00\n    /* \"#utility.yul\":3330:3339   */\n  dup4\n    /* \"#utility.yul\":3326:3343   */\n  add\n    /* \"#utility.yul\":3319:3366   */\n  mstore\n    /* \"#utility.yul\":3383:3514   */\n  tag_68\n    /* \"#utility.yul\":3509:3513   */\n  dup2\n    /* \"#utility.yul\":3383:3514   */\n  tag_60\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3375:3514   */\n  swap1\n  pop\n    /* \"#utility.yul\":3273:3521   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3527:3810   */\ntag_27:\n  0x00\n    /* \"#utility.yul\":3593:3595   */\n  0x40\n    /* \"#utility.yul\":3587:3596   */\n  mload\n    /* \"#utility.yul\":3577:3596   */\n  swap1\n  pop\n    /* \"#utility.yul\":3635:3639   */\n  dup2\n    /* \"#utility.yul\":3627:3633   */\n  dup2\n    /* \"#utility.yul\":3623:3640   */\n  add\n    /* \"#utility.yul\":3742:3748   */\n  dup2\n    /* \"#utility.yul\":3730:3740   */\n  dup2\n    /* \"#utility.yul\":3727:3749   */\n  lt\n    /* \"#utility.yul\":3706:3724   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3694:3704   */\n  dup3\n    /* \"#utility.yul\":3691:3725   */\n  gt\n    /* \"#utility.yul\":3688:3750   */\n  or\n    /* \"#utility.yul\":3685:3687   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3753:3771   */\n  tag_71\n  tag_72\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3685:3687   */\ntag_70:\n    /* \"#utility.yul\":3793:3803   */\n  dup1\n    /* \"#utility.yul\":3789:3791   */\n  0x40\n    /* \"#utility.yul\":3782:3804   */\n  mstore\n    /* \"#utility.yul\":3567:3810   */\n  pop\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3816:4147   */\ntag_26:\n  0x00\n    /* \"#utility.yul\":3967:3985   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3959:3965   */\n  dup3\n    /* \"#utility.yul\":3956:3986   */\n  gt\n    /* \"#utility.yul\":3953:3955   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3989:4007   */\n  tag_75\n  tag_72\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3953:3955   */\ntag_74:\n    /* \"#utility.yul\":4074:4078   */\n  0x1f\n    /* \"#utility.yul\":4070:4079   */\n  not\n    /* \"#utility.yul\":4063:4067   */\n  0x1f\n    /* \"#utility.yul\":4055:4061   */\n  dup4\n    /* \"#utility.yul\":4051:4068   */\n  add\n    /* \"#utility.yul\":4047:4080   */\n  and\n    /* \"#utility.yul\":4039:4080   */\n  swap1\n  pop\n    /* \"#utility.yul\":4135:4139   */\n  0x20\n    /* \"#utility.yul\":4129:4133   */\n  dup2\n    /* \"#utility.yul\":4125:4140   */\n  add\n    /* \"#utility.yul\":4117:4140   */\n  swap1\n  pop\n    /* \"#utility.yul\":3882:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4251   */\ntag_47:\n  0x00\n    /* \"#utility.yul\":4238:4243   */\n  dup2\n    /* \"#utility.yul\":4232:4244   */\n  mload\n    /* \"#utility.yul\":4222:4244   */\n  swap1\n  pop\n    /* \"#utility.yul\":4211:4251   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4257:4356   */\ntag_54:\n  0x00\n    /* \"#utility.yul\":4343:4348   */\n  dup2\n    /* \"#utility.yul\":4337:4349   */\n  mload\n    /* \"#utility.yul\":4327:4349   */\n  swap1\n  pop\n    /* \"#utility.yul\":4316:4356   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4362:4509   */\ntag_49:\n  0x00\n    /* \"#utility.yul\":4500:4503   */\n  dup2\n    /* \"#utility.yul\":4485:4503   */\n  swap1\n  pop\n    /* \"#utility.yul\":4475:4509   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4515:4684   */\ntag_56:\n  0x00\n    /* \"#utility.yul\":4633:4639   */\n  dup3\n    /* \"#utility.yul\":4628:4631   */\n  dup3\n    /* \"#utility.yul\":4621:4640   */\n  mstore\n    /* \"#utility.yul\":4673:4677   */\n  0x20\n    /* \"#utility.yul\":4668:4671   */\n  dup3\n    /* \"#utility.yul\":4664:4678   */\n  add\n    /* \"#utility.yul\":4649:4678   */\n  swap1\n  pop\n    /* \"#utility.yul\":4611:4684   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4690:4786   */\ntag_80:\n  0x00\n    /* \"#utility.yul\":4756:4780   */\n  tag_82\n    /* \"#utility.yul\":4774:4779   */\n  dup3\n    /* \"#utility.yul\":4756:4780   */\n  tag_83\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4745:4780   */\n  swap1\n  pop\n    /* \"#utility.yul\":4735:4786   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4792:4918   */\ntag_83:\n  0x00\n    /* \"#utility.yul\":4869:4911   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4862:4867   */\n  dup3\n    /* \"#utility.yul\":4858:4912   */\n  and\n    /* \"#utility.yul\":4847:4912   */\n  swap1\n  pop\n    /* \"#utility.yul\":4837:4918   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4924:5231   */\ntag_30:\n    /* \"#utility.yul\":4992:4993   */\n  0x00\n    /* \"#utility.yul\":5002:5115   */\ntag_86:\n    /* \"#utility.yul\":5016:5022   */\n  dup4\n    /* \"#utility.yul\":5013:5014   */\n  dup2\n    /* \"#utility.yul\":5010:5023   */\n  lt\n    /* \"#utility.yul\":5002:5115   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":5101:5102   */\n  dup1\n    /* \"#utility.yul\":5096:5099   */\n  dup3\n    /* \"#utility.yul\":5092:5103   */\n  add\n    /* \"#utility.yul\":5086:5104   */\n  mload\n    /* \"#utility.yul\":5082:5083   */\n  dup2\n    /* \"#utility.yul\":5077:5080   */\n  dup5\n    /* \"#utility.yul\":5073:5084   */\n  add\n    /* \"#utility.yul\":5066:5105   */\n  mstore\n    /* \"#utility.yul\":5038:5040   */\n  0x20\n    /* \"#utility.yul\":5035:5036   */\n  dup2\n    /* \"#utility.yul\":5031:5041   */\n  add\n    /* \"#utility.yul\":5026:5041   */\n  swap1\n  pop\n    /* \"#utility.yul\":5002:5115   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":5133:5139   */\n  dup4\n    /* \"#utility.yul\":5130:5131   */\n  dup2\n    /* \"#utility.yul\":5127:5140   */\n  gt\n    /* \"#utility.yul\":5124:5126   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":5213:5214   */\n  0x00\n    /* \"#utility.yul\":5204:5210   */\n  dup5\n    /* \"#utility.yul\":5199:5202   */\n  dup5\n    /* \"#utility.yul\":5195:5211   */\n  add\n    /* \"#utility.yul\":5188:5215   */\n  mstore\n    /* \"#utility.yul\":5124:5126   */\ntag_89:\n    /* \"#utility.yul\":4973:5231   */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5237:5417   */\ntag_72:\n    /* \"#utility.yul\":5285:5362   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5282:5283   */\n  0x00\n    /* \"#utility.yul\":5275:5363   */\n  mstore\n    /* \"#utility.yul\":5382:5386   */\n  0x41\n    /* \"#utility.yul\":5379:5380   */\n  0x04\n    /* \"#utility.yul\":5372:5387   */\n  mstore\n    /* \"#utility.yul\":5406:5410   */\n  0x24\n    /* \"#utility.yul\":5403:5404   */\n  0x00\n    /* \"#utility.yul\":5396:5411   */\n  revert\n    /* \"#utility.yul\":5423:5525   */\ntag_59:\n  0x00\n    /* \"#utility.yul\":5515:5517   */\n  0x1f\n    /* \"#utility.yul\":5511:5518   */\n  not\n    /* \"#utility.yul\":5506:5508   */\n  0x1f\n    /* \"#utility.yul\":5499:5504   */\n  dup4\n    /* \"#utility.yul\":5495:5509   */\n  add\n    /* \"#utility.yul\":5491:5519   */\n  and\n    /* \"#utility.yul\":5481:5519   */\n  swap1\n  pop\n    /* \"#utility.yul\":5471:5525   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5531:5653   */\ntag_34:\n    /* \"#utility.yul\":5604:5628   */\n  tag_93\n    /* \"#utility.yul\":5622:5627   */\n  dup2\n    /* \"#utility.yul\":5604:5628   */\n  tag_80\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":5597:5602   */\n  dup2\n    /* \"#utility.yul\":5594:5629   */\n  eq\n    /* \"#utility.yul\":5584:5586   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5643:5644   */\n  0x00\n    /* \"#utility.yul\":5640:5641   */\n  dup1\n    /* \"#utility.yul\":5633:5645   */\n  revert\n    /* \"#utility.yul\":5584:5586   */\ntag_94:\n    /* \"#utility.yul\":5574:5653   */\n  pop\n  jump\t// out\n    /* \"contracts/InitializedProxy.sol\":202:1861  contract InitializedProxy {\r... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/InitializedProxy.sol\":202:1861  contract InitializedProxy {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"contracts/InitializedProxy.sol\":1175:1188  address _impl */\n      0x00\n        /* \"contracts/InitializedProxy.sol\":1191:1250  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      tag_7\n        /* \"contracts/InitializedProxy.sol\":402:468  0x5f62ce3c9aebd463c7a36ab1b244d2bb94f07a2c13889b3b687940ebc467b9b3 */\n      0x5f62ce3c9aebd463c7a36ab1b244d2bb94f07a2c13889b3b687940ebc467b9b3\n        /* \"contracts/InitializedProxy.sol\":1229:1249  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"contracts/InitializedProxy.sol\":1191:1228  StorageSlotUpgradeable.getAddressSlot */\n      tag_8\n        /* \"contracts/InitializedProxy.sol\":1191:1250  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_7:\n        /* \"contracts/InitializedProxy.sol\":1191:1256  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/InitializedProxy.sol\":1175:1256  address _impl = StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"contracts/InitializedProxy.sol\":1308:1312  0x40 */\n      0x40\n        /* \"contracts/InitializedProxy.sol\":1302:1313  mload(0x40) */\n      mload\n        /* \"contracts/InitializedProxy.sol\":1348:1362  calldatasize() */\n      calldatasize\n        /* \"contracts/InitializedProxy.sol\":1345:1346  0 */\n      0x00\n        /* \"contracts/InitializedProxy.sol\":1340:1343  ptr */\n      dup3\n        /* \"contracts/InitializedProxy.sol\":1327:1363  calldatacopy(ptr, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/InitializedProxy.sol\":1442:1443  0 */\n      0x00\n        /* \"contracts/InitializedProxy.sol\":1439:1440  0 */\n      dup1\n        /* \"contracts/InitializedProxy.sol\":1423:1437  calldatasize() */\n      calldatasize\n        /* \"contracts/InitializedProxy.sol\":1418:1421  ptr */\n      dup4\n        /* \"contracts/InitializedProxy.sol\":1411:1416  _impl */\n      dup6\n        /* \"contracts/InitializedProxy.sol\":1404:1409  gas() */\n      gas\n        /* \"contracts/InitializedProxy.sol\":1391:1444  delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/InitializedProxy.sol\":1470:1486  returndatasize() */\n      returndatasize\n        /* \"contracts/InitializedProxy.sol\":1523:1527  size */\n      dup1\n        /* \"contracts/InitializedProxy.sol\":1520:1521  0 */\n      0x00\n        /* \"contracts/InitializedProxy.sol\":1515:1518  ptr */\n      dup5\n        /* \"contracts/InitializedProxy.sol\":1500:1528  returndatacopy(ptr, 0, size) */\n      returndatacopy\n        /* \"contracts/InitializedProxy.sol\":1551:1557  result */\n      dup2\n        /* \"contracts/InitializedProxy.sol\":1580:1581  0 */\n      0x00\n        /* \"contracts/InitializedProxy.sol\":1575:1641  case 0 {\r... */\n      dup2\n      eq\n      tag_10\n      jumpi\n        /* \"contracts/InitializedProxy.sol\":1702:1706  size */\n      dup2\n        /* \"contracts/InitializedProxy.sol\":1697:1700  ptr */\n      dup5\n        /* \"contracts/InitializedProxy.sol\":1690:1707  return(ptr, size) */\n      return\n        /* \"contracts/InitializedProxy.sol\":1575:1641  case 0 {\r... */\n    tag_10:\n        /* \"contracts/InitializedProxy.sol\":1617:1621  size */\n      dup2\n        /* \"contracts/InitializedProxy.sol\":1612:1615  ptr */\n      dup5\n        /* \"contracts/InitializedProxy.sol\":1605:1622  revert(ptr, size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1553:1700  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1614:1635  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1680:1684  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1670:1684  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1656:1694  {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e22184452819df0e3a4e12b5d81a427f92eba04f8a27762382a9b76dc4a2b75564736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5656:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "101:257:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "111:73:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "176:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "135:40:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "135:48:2"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "120:14:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:64:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "111:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "200:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "207:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "193:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "193:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "193:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "223:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "238:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "245:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "234:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "227:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "288:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "297:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "290:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "290:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "290:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "269:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "274:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "265:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "265:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "283:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "262:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "262:25:2"
															},
															"nodeType": "YulIf",
															"src": "259:2:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "335:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "340:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "345:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "313:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "313:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "313:39:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "74:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "79:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "87:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "95:5:2",
														"type": ""
													}
												],
												"src": "7:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "427:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "437:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "446:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "437:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "495:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "468:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "468:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "468:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "405:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "413:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "421:5:2",
														"type": ""
													}
												],
												"src": "364:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "598:214:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "647:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "656:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "659:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "649:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "649:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "649:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "626:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "634:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "622:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "622:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "641:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "611:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "611:35:2"
															},
															"nodeType": "YulIf",
															"src": "608:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "672:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "692:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "686:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "686:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "676:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "708:98:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "779:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "787:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "775:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "775:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "794:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "802:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "717:57:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:89:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "708:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "576:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "584:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "592:5:2",
														"type": ""
													}
												],
												"src": "526:286:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "921:441:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "967:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "976:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "979:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "969:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "969:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "969:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "942:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "951:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "938:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "938:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "963:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "934:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:32:2"
															},
															"nodeType": "YulIf",
															"src": "931:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "993:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1008:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1022:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1012:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1037:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1083:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1094:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1079:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1079:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1103:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1047:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1047:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1037:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1131:224:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1146:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1170:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1181:2:2",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1166:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1166:18:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1160:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1160:25:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1150:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1232:16:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1241:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1244:1:2",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1234:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1234:12:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1234:12:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1204:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1212:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1201:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "1198:2:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1262:83:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1317:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1328:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1313:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1313:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1272:40:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1272:73:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1262:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "883:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "894:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "906:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "914:6:2",
														"type": ""
													}
												],
												"src": "818:544:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1476:265:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1486:52:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1532:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1500:31:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:38:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1490:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1547:95:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1630:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1635:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1554:75:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:88:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1547:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1684:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1673:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1673:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1691:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1696:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1651:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1651:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1651:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1712:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1723:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1728:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1719:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1719:16:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1712:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1457:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1464:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1472:3:2",
														"type": ""
													}
												],
												"src": "1368:373:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1839:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1849:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1896:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1863:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1853:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1911:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1977:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1982:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1918:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1918:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1911:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2024:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2031:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2020:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2020:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2038:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2043:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1998:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1998:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2059:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2070:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2097:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2075:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2075:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2066:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2066:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2059:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1820:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1827:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1835:3:2",
														"type": ""
													}
												],
												"src": "1747:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2263:237:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2273:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2339:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:2",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2280:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2280:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2273:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2368:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2373:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2364:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2364:11:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2377:34:2",
																		"type": "",
																		"value": "Proxy :: Logical contracts canno"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2357:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:55:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2357:55:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2433:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2438:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2429:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2429:12:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2443:21:2",
																		"type": "",
																		"value": "t be zero addresses"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2422:43:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2475:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2486:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2491:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2482:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2482:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2475:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_57510bd80d7fea0885e45a6c6f320fd99c42e73bc906a953f05cdc1e6c625faa_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2251:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2259:3:2",
														"type": ""
													}
												],
												"src": "2117:383:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2640:137:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2651:100:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2738:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2747:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2658:79:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:93:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2768:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2619:3:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2625:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2636:3:2",
														"type": ""
													}
												],
												"src": "2506:271:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2901:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2911:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2923:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2934:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2919:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2919:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2911:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2958:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2969:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2954:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2954:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2977:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2983:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2973:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2973:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2947:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2947:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2947:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3003:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3075:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3084:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3011:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3011:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3003:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2873:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2885:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2896:4:2",
														"type": ""
													}
												],
												"src": "2783:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3273:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3283:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3295:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3306:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3291:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3291:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3283:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3330:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3341:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3326:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3349:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3345:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3345:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3319:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3319:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3319:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3509:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_57510bd80d7fea0885e45a6c6f320fd99c42e73bc906a953f05cdc1e6c625faa_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3383:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3375:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_57510bd80d7fea0885e45a6c6f320fd99c42e73bc906a953f05cdc1e6c625faa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3253:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3268:4:2",
														"type": ""
													}
												],
												"src": "3102:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3567:243:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3577:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3593:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3587:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3587:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3577:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3605:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3627:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3635:4:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3623:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:17:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3609:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3751:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3753:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3753:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3753:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3694:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3706:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3691:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3691:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3730:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3742:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3727:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3727:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3688:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3688:62:2"
															},
															"nodeType": "YulIf",
															"src": "3685:2:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3789:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3793:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3782:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3782:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3782:22:2"
														}
													]
												},
												"name": "allocateMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3551:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3560:6:2",
														"type": ""
													}
												],
												"src": "3527:283:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3882:265:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3987:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3989:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3989:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3989:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3959:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3967:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3956:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3956:30:2"
															},
															"nodeType": "YulIf",
															"src": "3953:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4039:41:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4055:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4063:4:2",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4051:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4051:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4074:4:2",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4070:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4070:9:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4047:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:33:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4039:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4117:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4129:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4135:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4125:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4125:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4117:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3866:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3877:4:2",
														"type": ""
													}
												],
												"src": "3816:331:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4211:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4222:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4238:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4232:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4232:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4222:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4194:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4204:6:2",
														"type": ""
													}
												],
												"src": "4153:98:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4316:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4343:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4337:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4337:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4327:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4299:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4309:6:2",
														"type": ""
													}
												],
												"src": "4257:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4475:34:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4485:18:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4500:3:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4485:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4447:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4452:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4463:11:2",
														"type": ""
													}
												],
												"src": "4362:147:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4611:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4628:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4633:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4621:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4621:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4621:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4649:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4668:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4673:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4664:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4649:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4583:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4588:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4599:11:2",
														"type": ""
													}
												],
												"src": "4515:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4735:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4745:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4774:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4756:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4756:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4745:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4717:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4727:7:2",
														"type": ""
													}
												],
												"src": "4690:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4837:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4847:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4862:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4869:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4858:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4847:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4819:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4829:7:2",
														"type": ""
													}
												],
												"src": "4792:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4973:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4983:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4992:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4987:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5052:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5077:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5082:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5073:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5073:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5096:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5101:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5092:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5092:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5086:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5086:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5066:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5066:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5066:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5013:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5016:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5010:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5010:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5024:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5026:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5035:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5038:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5031:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5031:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5026:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5006:3:2",
																"statements": []
															},
															"src": "5002:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5149:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5199:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5204:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5195:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5195:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5213:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5188:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5188:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5188:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5130:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5133:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5127:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5127:13:2"
															},
															"nodeType": "YulIf",
															"src": "5124:2:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4955:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4960:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4965:6:2",
														"type": ""
													}
												],
												"src": "4924:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5265:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5282:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5275:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5275:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5275:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5379:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5382:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5372:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5372:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5403:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5406:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5396:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5396:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5396:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5237:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5471:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5481:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5499:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5506:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5495:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5495:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5515:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5511:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5511:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5491:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5491:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5481:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5454:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5464:6:2",
														"type": ""
													}
												],
												"src": "5423:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5574:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5631:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5640:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5643:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5633:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5633:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5633:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5597:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5622:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5604:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5604:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5594:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5594:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5587:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5587:43:2"
															},
															"nodeType": "YulIf",
															"src": "5584:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5567:5:2",
														"type": ""
													}
												],
												"src": "5531:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_57510bd80d7fea0885e45a6c6f320fd99c42e73bc906a953f05cdc1e6c625faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n\n        mstore(add(pos, 0), \"Proxy :: Logical contracts canno\")\n\n        mstore(add(pos, 32), \"t be zero addresses\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_57510bd80d7fea0885e45a6c6f320fd99c42e73bc906a953f05cdc1e6c625faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_57510bd80d7fea0885e45a6c6f320fd99c42e73bc906a953f05cdc1e6c625faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105f73803806105f78339818101604052810190610032919061025b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156100a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610099906103b8565b60405180910390fd5b816100d97f5f62ce3c9aebd463c7a36ab1b244d2bb94f07a2c13889b3b687940ebc467b9b360001b6101d460201b6100821760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000808373ffffffffffffffffffffffffffffffffffffffff1683604051610142919061037f565b600060405180830381855af49150503d806000811461017d576040519150601f19603f3d011682016040523d82523d6000602084013e610182565b606091505b50915091508181906101ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c19190610396565b60405180910390fd5b5050505050610527565b6000819050919050565b60006101f16101ec84610409565b6103d8565b90508281526020810184848401111561020957600080fd5b61021484828561049d565b509392505050565b60008151905061022b81610510565b92915050565b600082601f83011261024257600080fd5b81516102528482602086016101de565b91505092915050565b6000806040838503121561026e57600080fd5b600061027c8582860161021c565b925050602083015167ffffffffffffffff81111561029957600080fd5b6102a585828601610231565b9150509250929050565b60006102ba82610439565b6102c4818561044f565b93506102d481856020860161049d565b80840191505092915050565b60006102eb82610444565b6102f5818561045a565b935061030581856020860161049d565b61030e816104ff565b840191505092915050565b600061032660338361045a565b91507f50726f7879203a3a204c6f676963616c20636f6e7472616374732063616e6e6f60008301527f74206265207a65726f20616464726573736573000000000000000000000000006020830152604082019050919050565b600061038b82846102af565b915081905092915050565b600060208201905081810360008301526103b081846102e0565b905092915050565b600060208201905081810360008301526103d181610319565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156103ff576103fe6104d0565b5b8060405250919050565b600067ffffffffffffffff821115610424576104236104d0565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006104768261047d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156104bb5780820151818401526020810190506104a0565b838111156104ca576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6105198161046b565b811461052457600080fd5b50565b60c2806105356000396000f3fe608060405236600a57005b600060367f5f62ce3c9aebd463c7a36ab1b244d2bb94f07a2c13889b3b687940ebc467b9b360001b6082565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060405136600082376000803683855af43d806000843e8160008114607e578184f35b8184fd5b600081905091905056fea2646970667358221220e22184452819df0e3a4e12b5d81a427f92eba04f8a27762382a9b76dc4a2b75564736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5F7 CODESIZE SUB DUP1 PUSH2 0x5F7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x25B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP1 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xD9 PUSH32 0x5F62CE3C9AEBD463C7A36AB1B244D2BB94F07A2C13889B3B687940EBC467B9B3 PUSH1 0x0 SHL PUSH2 0x1D4 PUSH1 0x20 SHL PUSH2 0x82 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x182 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP2 SWAP1 PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x527 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 PUSH2 0x1EC DUP5 PUSH2 0x409 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x214 DUP5 DUP3 DUP6 PUSH2 0x49D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B DUP2 PUSH2 0x510 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x252 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27C DUP6 DUP3 DUP7 ADD PUSH2 0x21C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A5 DUP6 DUP3 DUP7 ADD PUSH2 0x231 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA DUP3 PUSH2 0x439 JUMP JUMPDEST PUSH2 0x2C4 DUP2 DUP6 PUSH2 0x44F JUMP JUMPDEST SWAP4 POP PUSH2 0x2D4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x49D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EB DUP3 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x2F5 DUP2 DUP6 PUSH2 0x45A JUMP JUMPDEST SWAP4 POP PUSH2 0x305 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x49D JUMP JUMPDEST PUSH2 0x30E DUP2 PUSH2 0x4FF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x326 PUSH1 0x33 DUP4 PUSH2 0x45A JUMP JUMPDEST SWAP2 POP PUSH32 0x50726F7879203A3A204C6F676963616C20636F6E7472616374732063616E6E6F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x74206265207A65726F2061646472657373657300000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38B DUP3 DUP5 PUSH2 0x2AF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B0 DUP2 DUP5 PUSH2 0x2E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D1 DUP2 PUSH2 0x319 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3FF JUMPI PUSH2 0x3FE PUSH2 0x4D0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x424 JUMPI PUSH2 0x423 PUSH2 0x4D0 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x476 DUP3 PUSH2 0x47D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4BB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x519 DUP2 PUSH2 0x46B JUMP JUMPDEST DUP2 EQ PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xC2 DUP1 PUSH2 0x535 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0xA JUMPI STOP JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH32 0x5F62CE3C9AEBD463C7A36AB1B244D2BB94F07A2C13889B3B687940EBC467B9B3 PUSH1 0x0 SHL PUSH1 0x82 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x40 MLOAD CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL RETURNDATASIZE DUP1 PUSH1 0x0 DUP5 RETURNDATACOPY DUP2 PUSH1 0x0 DUP2 EQ PUSH1 0x7E JUMPI DUP2 DUP5 RETURN JUMPDEST DUP2 DUP5 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0x21 DUP5 GASLIMIT 0x28 NOT 0xDF 0xE GASPRICE 0x4E SLT 0xB5 0xD8 BYTE TIMESTAMP PUSH32 0x92EBA04F8A27762382A9B76DC4A2B75564736F6C634300080000330000000000 ",
							"sourceMap": "202:1659:1:-:0;;;516:567;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;642:1;625:19;;:5;:19;;;;617:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;778:5;710:59;402:66;748:20;;710:37;;;;;:59;;:::i;:::-;:65;;;:73;;;;;;;;;;;;;;;;;;879:8;889:23;929:5;:18;;948:22;929:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;878:93;;;;1051:3;1063:10;1043:32;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;516:567;;;;202:1659;;1553:147:0;1614:21;1680:4;1670:14;;1656:38;;;:::o;7:351:2:-;;120:64;135:48;176:6;135:48;:::i;:::-;120:64;:::i;:::-;111:73;;207:6;200:5;193:21;245:4;238:5;234:16;283:3;274:6;269:3;265:16;262:25;259:2;;;300:1;297;290:12;259:2;313:39;345:6;340:3;335;313:39;:::i;:::-;101:257;;;;;;:::o;364:143::-;;452:6;446:13;437:22;;468:33;495:5;468:33;:::i;:::-;427:80;;;;:::o;526:286::-;;641:3;634:4;626:6;622:17;618:27;608:2;;659:1;656;649:12;608:2;692:6;686:13;717:89;802:3;794:6;787:4;779:6;775:17;717:89;:::i;:::-;708:98;;598:214;;;;;:::o;818:544::-;;;963:2;951:9;942:7;938:23;934:32;931:2;;;979:1;976;969:12;931:2;1022:1;1047:64;1103:7;1094:6;1083:9;1079:22;1047:64;:::i;:::-;1037:74;;993:128;1181:2;1170:9;1166:18;1160:25;1212:18;1204:6;1201:30;1198:2;;;1244:1;1241;1234:12;1198:2;1272:73;1337:7;1328:6;1317:9;1313:22;1272:73;:::i;:::-;1262:83;;1131:224;921:441;;;;;:::o;1368:373::-;;1500:38;1532:5;1500:38;:::i;:::-;1554:88;1635:6;1630:3;1554:88;:::i;:::-;1547:95;;1651:52;1696:6;1691:3;1684:4;1677:5;1673:16;1651:52;:::i;:::-;1728:6;1723:3;1719:16;1712:23;;1476:265;;;;;:::o;1747:364::-;;1863:39;1896:5;1863:39;:::i;:::-;1918:71;1982:6;1977:3;1918:71;:::i;:::-;1911:78;;1998:52;2043:6;2038:3;2031:4;2024:5;2020:16;1998:52;:::i;:::-;2075:29;2097:6;2075:29;:::i;:::-;2070:3;2066:39;2059:46;;1839:272;;;;;:::o;2117:383::-;;2280:67;2344:2;2339:3;2280:67;:::i;:::-;2273:74;;2377:34;2373:1;2368:3;2364:11;2357:55;2443:21;2438:2;2433:3;2429:12;2422:43;2491:2;2486:3;2482:12;2475:19;;2263:237;;;:::o;2506:271::-;;2658:93;2747:3;2738:6;2658:93;:::i;:::-;2651:100;;2768:3;2761:10;;2640:137;;;;:::o;2783:313::-;;2934:2;2923:9;2919:18;2911:26;;2983:9;2977:4;2973:20;2969:1;2958:9;2954:17;2947:47;3011:78;3084:4;3075:6;3011:78;:::i;:::-;3003:86;;2901:195;;;;:::o;3102:419::-;;3306:2;3295:9;3291:18;3283:26;;3355:9;3349:4;3345:20;3341:1;3330:9;3326:17;3319:47;3383:131;3509:4;3383:131;:::i;:::-;3375:139;;3273:248;;;:::o;3527:283::-;;3593:2;3587:9;3577:19;;3635:4;3627:6;3623:17;3742:6;3730:10;3727:22;3706:18;3694:10;3691:34;3688:62;3685:2;;;3753:18;;:::i;:::-;3685:2;3793:10;3789:2;3782:22;3567:243;;;;:::o;3816:331::-;;3967:18;3959:6;3956:30;3953:2;;;3989:18;;:::i;:::-;3953:2;4074:4;4070:9;4063:4;4055:6;4051:17;4047:33;4039:41;;4135:4;4129;4125:15;4117:23;;3882:265;;;:::o;4153:98::-;;4238:5;4232:12;4222:22;;4211:40;;;:::o;4257:99::-;;4343:5;4337:12;4327:22;;4316:40;;;:::o;4362:147::-;;4500:3;4485:18;;4475:34;;;;:::o;4515:169::-;;4633:6;4628:3;4621:19;4673:4;4668:3;4664:14;4649:29;;4611:73;;;;:::o;4690:96::-;;4756:24;4774:5;4756:24;:::i;:::-;4745:35;;4735:51;;;:::o;4792:126::-;;4869:42;4862:5;4858:54;4847:65;;4837:81;;;:::o;4924:307::-;4992:1;5002:113;5016:6;5013:1;5010:13;5002:113;;;5101:1;5096:3;5092:11;5086:18;5082:1;5077:3;5073:11;5066:39;5038:2;5035:1;5031:10;5026:15;;5002:113;;;5133:6;5130:1;5127:13;5124:2;;;5213:1;5204:6;5199:3;5195:16;5188:27;5124:2;4973:258;;;;:::o;5237:180::-;5285:77;5282:1;5275:88;5382:4;5379:1;5372:15;5406:4;5403:1;5396:15;5423:102;;5515:2;5511:7;5506:2;5499:5;5495:14;5491:28;5481:38;;5471:54;;;:::o;5531:122::-;5604:24;5622:5;5604:24;:::i;:::-;5597:5;5594:35;5584:2;;5643:1;5640;5633:12;5584:2;5574:79;:::o;202:1659:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405236600a57005b600060367f5f62ce3c9aebd463c7a36ab1b244d2bb94f07a2c13889b3b687940ebc467b9b360001b6082565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060405136600082376000803683855af43d806000843e8160008114607e578184f35b8184fd5b600081905091905056fea2646970667358221220e22184452819df0e3a4e12b5d81a427f92eba04f8a27762382a9b76dc4a2b75564736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0xA JUMPI STOP JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH32 0x5F62CE3C9AEBD463C7A36AB1B244D2BB94F07A2C13889B3B687940EBC467B9B3 PUSH1 0x0 SHL PUSH1 0x82 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x40 MLOAD CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL RETURNDATASIZE DUP1 PUSH1 0x0 DUP5 RETURNDATACOPY DUP2 PUSH1 0x0 DUP2 EQ PUSH1 0x7E JUMPI DUP2 DUP5 RETURN JUMPDEST DUP2 DUP5 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0x21 DUP5 GASLIMIT 0x28 NOT 0xDF 0xE GASPRICE 0x4E SLT 0xB5 0xD8 BYTE TIMESTAMP PUSH32 0x92EBA04F8A27762382A9B76DC4A2B75564736F6C634300080000330000000000 ",
							"sourceMap": "202:1659:1:-:0;;;;;;;;1175:13;1191:59;402:66;1229:20;;1191:37;:59::i;:::-;:65;;;;;;;;;;;;1175:81;;1308:4;1302:11;1348:14;1345:1;1340:3;1327:36;1442:1;1439;1423:14;1418:3;1411:5;1404;1391:53;1470:16;1523:4;1520:1;1515:3;1500:28;1551:6;1580:1;1575:66;;;;1702:4;1697:3;1690:17;1575:66;1617:4;1612:3;1605:17;1553:147:0;1614:21;1680:4;1670:14;;1656:38;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "38800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 1861,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 642,
									"end": 643,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 644,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 625,
									"end": 644,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 625,
									"end": 630,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 625,
									"end": 644,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 625,
									"end": 644,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 625,
									"end": 644,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 625,
									"end": 644,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 617,
									"end": 699,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "PUSH",
									"source": 1,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 617,
									"end": 699,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 617,
									"end": 699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 617,
									"end": 699,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 617,
									"end": 699,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 617,
									"end": 699,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 617,
									"end": 699,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 617,
									"end": 699,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 617,
									"end": 699,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 778,
									"end": 783,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 710,
									"end": 769,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 402,
									"end": 468,
									"name": "PUSH",
									"source": 1,
									"value": "5F62CE3C9AEBD463C7A36AB1B244D2BB94F07A2C13889B3B687940EBC467B9B3"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 768,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 710,
									"end": 747,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 710,
									"end": 747,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 710,
									"end": 747,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 710,
									"end": 747,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551624"
								},
								{
									"begin": 710,
									"end": 747,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 710,
									"end": 769,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 710,
									"end": 769,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 710,
									"end": 769,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 710,
									"end": 769,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 710,
									"end": 769,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 710,
									"end": 775,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 710,
									"end": 775,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 710,
									"end": 775,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 710,
									"end": 783,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 710,
									"end": 783,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 710,
									"end": 783,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 710,
									"end": 783,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 710,
									"end": 783,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 879,
									"end": 887,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 889,
									"end": 912,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 929,
									"end": 934,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 929,
									"end": 947,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 929,
									"end": 947,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 948,
									"end": 970,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "DELEGATECALL",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "RETURNDATACOPY",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 929,
									"end": 971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 878,
									"end": 971,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 878,
									"end": 971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 878,
									"end": 971,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 878,
									"end": 971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1054,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1063,
									"end": 1073,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "PUSH",
									"source": 1,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1075,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 516,
									"end": 1083,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1700,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1553,
									"end": 1700,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1614,
									"end": 1635,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1680,
									"end": 1684,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1684,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1670,
									"end": 1684,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1656,
									"end": 1694,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1656,
									"end": 1694,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1656,
									"end": 1694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1656,
									"end": 1694,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 358,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 358,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 358,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 184,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 135,
									"end": 183,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 176,
									"end": 182,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 135,
									"end": 183,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 135,
									"end": 183,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 135,
									"end": 183,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 135,
									"end": 183,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 120,
									"end": 184,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 120,
									"end": 184,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 120,
									"end": 184,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 120,
									"end": 184,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 111,
									"end": 184,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 111,
									"end": 184,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 207,
									"end": 213,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 200,
									"end": 205,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 193,
									"end": 214,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 245,
									"end": 249,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 238,
									"end": 243,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 234,
									"end": 250,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 283,
									"end": 286,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 274,
									"end": 280,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 269,
									"end": 272,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 265,
									"end": 281,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 262,
									"end": 287,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 259,
									"end": 261,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 259,
									"end": 261,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 259,
									"end": 261,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 300,
									"end": 301,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 298,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 290,
									"end": 302,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 259,
									"end": 261,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 259,
									"end": 261,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 313,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 345,
									"end": 351,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 340,
									"end": 343,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 335,
									"end": 338,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 313,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 313,
									"end": 352,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 313,
									"end": 352,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 313,
									"end": 352,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 101,
									"end": 358,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 101,
									"end": 358,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 101,
									"end": 358,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 101,
									"end": 358,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 101,
									"end": 358,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 101,
									"end": 358,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 101,
									"end": 358,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 364,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 364,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 364,
									"end": 507,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 452,
									"end": 458,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 446,
									"end": 459,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 437,
									"end": 459,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 437,
									"end": 459,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 468,
									"end": 501,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 495,
									"end": 500,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 468,
									"end": 501,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 468,
									"end": 501,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 468,
									"end": 501,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 468,
									"end": 501,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 427,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 427,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 427,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 427,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 427,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 526,
									"end": 812,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 526,
									"end": 812,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 526,
									"end": 812,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 644,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 634,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 626,
									"end": 632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 622,
									"end": 639,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 618,
									"end": 645,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 608,
									"end": 610,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 608,
									"end": 610,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 659,
									"end": 660,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 657,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 649,
									"end": 661,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 608,
									"end": 610,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 608,
									"end": 610,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 692,
									"end": 698,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 686,
									"end": 699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 717,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 802,
									"end": 805,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 794,
									"end": 800,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 787,
									"end": 791,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 779,
									"end": 785,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 775,
									"end": 792,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 717,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 717,
									"end": 806,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 717,
									"end": 806,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 717,
									"end": 806,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 708,
									"end": 806,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 708,
									"end": 806,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 598,
									"end": 812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 598,
									"end": 812,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 598,
									"end": 812,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 598,
									"end": 812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 598,
									"end": 812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 598,
									"end": 812,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 818,
									"end": 1362,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 818,
									"end": 1362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 818,
									"end": 1362,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 1362,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 963,
									"end": 965,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 951,
									"end": 960,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 942,
									"end": 949,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 938,
									"end": 961,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 934,
									"end": 966,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 931,
									"end": 933,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 931,
									"end": 933,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 931,
									"end": 933,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 979,
									"end": 980,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 976,
									"end": 977,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 969,
									"end": 981,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 931,
									"end": 933,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 931,
									"end": 933,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1022,
									"end": 1023,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1111,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 1103,
									"end": 1110,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1094,
									"end": 1100,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1083,
									"end": 1092,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1079,
									"end": 1101,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1047,
									"end": 1111,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 1047,
									"end": 1111,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1047,
									"end": 1111,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 1047,
									"end": 1111,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1037,
									"end": 1111,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1037,
									"end": 1111,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 993,
									"end": 1121,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1181,
									"end": 1183,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1170,
									"end": 1179,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1166,
									"end": 1184,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1160,
									"end": 1185,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1212,
									"end": 1230,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1204,
									"end": 1210,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1201,
									"end": 1231,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1198,
									"end": 1200,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1198,
									"end": 1200,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 1198,
									"end": 1200,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 1242,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1234,
									"end": 1246,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1198,
									"end": 1200,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 1198,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 1345,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1328,
									"end": 1334,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1317,
									"end": 1326,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1313,
									"end": 1335,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1272,
									"end": 1345,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 1272,
									"end": 1345,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1272,
									"end": 1345,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 1272,
									"end": 1345,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1262,
									"end": 1345,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1262,
									"end": 1345,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1131,
									"end": 1355,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 1362,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 921,
									"end": 1362,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 1362,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 921,
									"end": 1362,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 921,
									"end": 1362,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 1362,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1368,
									"end": 1741,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1368,
									"end": 1741,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1368,
									"end": 1741,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1500,
									"end": 1538,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 1532,
									"end": 1537,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1500,
									"end": 1538,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 1500,
									"end": 1538,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1500,
									"end": 1538,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 1500,
									"end": 1538,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1554,
									"end": 1642,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1635,
									"end": 1641,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1630,
									"end": 1633,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1554,
									"end": 1642,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 1554,
									"end": 1642,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1554,
									"end": 1642,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1554,
									"end": 1642,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1547,
									"end": 1642,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1547,
									"end": 1642,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1703,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 1696,
									"end": 1702,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1691,
									"end": 1694,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1684,
									"end": 1688,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1677,
									"end": 1682,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1673,
									"end": 1689,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1651,
									"end": 1703,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1651,
									"end": 1703,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1651,
									"end": 1703,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 1651,
									"end": 1703,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1728,
									"end": 1734,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1723,
									"end": 1726,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1719,
									"end": 1735,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1712,
									"end": 1735,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1712,
									"end": 1735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1476,
									"end": 1741,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1476,
									"end": 1741,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1476,
									"end": 1741,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1476,
									"end": 1741,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1476,
									"end": 1741,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1476,
									"end": 1741,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1747,
									"end": 2111,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 1747,
									"end": 2111,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1747,
									"end": 2111,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1863,
									"end": 1902,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 1896,
									"end": 1901,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1863,
									"end": 1902,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 1863,
									"end": 1902,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1863,
									"end": 1902,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 1863,
									"end": 1902,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1918,
									"end": 1989,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1982,
									"end": 1988,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1977,
									"end": 1980,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1918,
									"end": 1989,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1918,
									"end": 1989,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1918,
									"end": 1989,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1918,
									"end": 1989,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1911,
									"end": 1989,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1911,
									"end": 1989,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1998,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 2043,
									"end": 2049,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2038,
									"end": 2041,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2031,
									"end": 2035,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2024,
									"end": 2029,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2020,
									"end": 2036,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1998,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1998,
									"end": 2050,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1998,
									"end": 2050,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 1998,
									"end": 2050,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2075,
									"end": 2104,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 2097,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2075,
									"end": 2104,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 2075,
									"end": 2104,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2075,
									"end": 2104,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 2075,
									"end": 2104,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2070,
									"end": 2073,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2066,
									"end": 2105,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2059,
									"end": 2105,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2059,
									"end": 2105,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1839,
									"end": 2111,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1839,
									"end": 2111,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1839,
									"end": 2111,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1839,
									"end": 2111,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1839,
									"end": 2111,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1839,
									"end": 2111,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2117,
									"end": 2500,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 2117,
									"end": 2500,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2117,
									"end": 2500,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2347,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 2344,
									"end": 2346,
									"name": "PUSH",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 2339,
									"end": 2342,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2280,
									"end": 2347,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 2280,
									"end": 2347,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2280,
									"end": 2347,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 2280,
									"end": 2347,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2273,
									"end": 2347,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2273,
									"end": 2347,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2377,
									"end": 2411,
									"name": "PUSH",
									"source": 2,
									"value": "50726F7879203A3A204C6F676963616C20636F6E7472616374732063616E6E6F"
								},
								{
									"begin": 2373,
									"end": 2374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2368,
									"end": 2371,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2364,
									"end": 2375,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2357,
									"end": 2412,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2443,
									"end": 2464,
									"name": "PUSH",
									"source": 2,
									"value": "74206265207A65726F2061646472657373657300000000000000000000000000"
								},
								{
									"begin": 2438,
									"end": 2440,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2433,
									"end": 2436,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2429,
									"end": 2441,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2422,
									"end": 2465,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2491,
									"end": 2493,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2486,
									"end": 2489,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2482,
									"end": 2494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2475,
									"end": 2494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2475,
									"end": 2494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2500,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2500,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2500,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2506,
									"end": 2777,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2506,
									"end": 2777,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2506,
									"end": 2777,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2658,
									"end": 2751,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 2747,
									"end": 2750,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2738,
									"end": 2744,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2658,
									"end": 2751,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 2658,
									"end": 2751,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2658,
									"end": 2751,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 2658,
									"end": 2751,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2651,
									"end": 2751,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2651,
									"end": 2751,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2768,
									"end": 2771,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2761,
									"end": 2771,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2761,
									"end": 2771,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2640,
									"end": 2777,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2640,
									"end": 2777,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2640,
									"end": 2777,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2640,
									"end": 2777,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2640,
									"end": 2777,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2783,
									"end": 3096,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2783,
									"end": 3096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2783,
									"end": 3096,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2934,
									"end": 2936,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2923,
									"end": 2932,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2919,
									"end": 2937,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2911,
									"end": 2937,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2911,
									"end": 2937,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2983,
									"end": 2992,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2977,
									"end": 2981,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2973,
									"end": 2993,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2969,
									"end": 2970,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2958,
									"end": 2967,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2954,
									"end": 2971,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2947,
									"end": 2994,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3011,
									"end": 3089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 3084,
									"end": 3088,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3075,
									"end": 3081,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3011,
									"end": 3089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 3011,
									"end": 3089,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3011,
									"end": 3089,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 3011,
									"end": 3089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3003,
									"end": 3089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3003,
									"end": 3089,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2901,
									"end": 3096,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2901,
									"end": 3096,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2901,
									"end": 3096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2901,
									"end": 3096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2901,
									"end": 3096,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3102,
									"end": 3521,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3102,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3102,
									"end": 3521,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3306,
									"end": 3308,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3295,
									"end": 3304,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3291,
									"end": 3309,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3283,
									"end": 3309,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3283,
									"end": 3309,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3355,
									"end": 3364,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3349,
									"end": 3353,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3345,
									"end": 3365,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3341,
									"end": 3342,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3330,
									"end": 3339,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3319,
									"end": 3366,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3383,
									"end": 3514,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 3509,
									"end": 3513,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3383,
									"end": 3514,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 3383,
									"end": 3514,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3383,
									"end": 3514,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 3383,
									"end": 3514,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3375,
									"end": 3514,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3375,
									"end": 3514,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3273,
									"end": 3521,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3273,
									"end": 3521,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3273,
									"end": 3521,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3273,
									"end": 3521,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3527,
									"end": 3810,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 3527,
									"end": 3810,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3527,
									"end": 3810,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3593,
									"end": 3595,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3587,
									"end": 3596,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3577,
									"end": 3596,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3577,
									"end": 3596,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3635,
									"end": 3639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3627,
									"end": 3633,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3623,
									"end": 3640,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3742,
									"end": 3748,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3730,
									"end": 3740,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3727,
									"end": 3749,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 3706,
									"end": 3724,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3694,
									"end": 3704,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3691,
									"end": 3725,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 3688,
									"end": 3750,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3685,
									"end": 3687,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3685,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 3685,
									"end": 3687,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3753,
									"end": 3771,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 3753,
									"end": 3771,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 3753,
									"end": 3771,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3753,
									"end": 3771,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 3753,
									"end": 3771,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3685,
									"end": 3687,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 3685,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3793,
									"end": 3803,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3789,
									"end": 3791,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3782,
									"end": 3804,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3567,
									"end": 3810,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3567,
									"end": 3810,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3567,
									"end": 3810,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3567,
									"end": 3810,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3567,
									"end": 3810,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3816,
									"end": 4147,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 3816,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3816,
									"end": 4147,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3967,
									"end": 3985,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3959,
									"end": 3965,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3956,
									"end": 3986,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 3953,
									"end": 3955,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3953,
									"end": 3955,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 3953,
									"end": 3955,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4007,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 3989,
									"end": 4007,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 3989,
									"end": 4007,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3989,
									"end": 4007,
									"name": "tag",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 3989,
									"end": 4007,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3953,
									"end": 3955,
									"name": "tag",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 3953,
									"end": 3955,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4074,
									"end": 4078,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4070,
									"end": 4079,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4063,
									"end": 4067,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4055,
									"end": 4061,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4051,
									"end": 4068,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4047,
									"end": 4080,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4039,
									"end": 4080,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4039,
									"end": 4080,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4135,
									"end": 4139,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4129,
									"end": 4133,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4125,
									"end": 4140,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4117,
									"end": 4140,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4117,
									"end": 4140,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3882,
									"end": 4147,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3882,
									"end": 4147,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3882,
									"end": 4147,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3882,
									"end": 4147,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 4153,
									"end": 4251,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 4153,
									"end": 4251,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4153,
									"end": 4251,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4243,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4232,
									"end": 4244,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4222,
									"end": 4244,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4222,
									"end": 4244,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4211,
									"end": 4251,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4211,
									"end": 4251,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4211,
									"end": 4251,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4211,
									"end": 4251,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 4257,
									"end": 4356,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 4257,
									"end": 4356,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4257,
									"end": 4356,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4343,
									"end": 4348,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4337,
									"end": 4349,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 4327,
									"end": 4349,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4327,
									"end": 4349,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4316,
									"end": 4356,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4316,
									"end": 4356,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4316,
									"end": 4356,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4316,
									"end": 4356,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 4362,
									"end": 4509,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 4362,
									"end": 4509,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4362,
									"end": 4509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4500,
									"end": 4503,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4485,
									"end": 4503,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4485,
									"end": 4503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4475,
									"end": 4509,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4475,
									"end": 4509,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4475,
									"end": 4509,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4475,
									"end": 4509,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4475,
									"end": 4509,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 4515,
									"end": 4684,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 4515,
									"end": 4684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4515,
									"end": 4684,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4633,
									"end": 4639,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4628,
									"end": 4631,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4621,
									"end": 4640,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4673,
									"end": 4677,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 4668,
									"end": 4671,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4664,
									"end": 4678,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4649,
									"end": 4678,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4649,
									"end": 4678,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4611,
									"end": 4684,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 4611,
									"end": 4684,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4611,
									"end": 4684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4611,
									"end": 4684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4611,
									"end": 4684,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 4690,
									"end": 4786,
									"name": "tag",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 4690,
									"end": 4786,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4690,
									"end": 4786,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4756,
									"end": 4780,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 4774,
									"end": 4779,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4756,
									"end": 4780,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 4756,
									"end": 4780,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 4756,
									"end": 4780,
									"name": "tag",
									"source": 2,
									"value": "82"
								},
								{
									"begin": 4756,
									"end": 4780,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4780,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4745,
									"end": 4780,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4735,
									"end": 4786,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4735,
									"end": 4786,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4735,
									"end": 4786,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4735,
									"end": 4786,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 4792,
									"end": 4918,
									"name": "tag",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 4792,
									"end": 4918,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4792,
									"end": 4918,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4869,
									"end": 4911,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4862,
									"end": 4867,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 4858,
									"end": 4912,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4847,
									"end": 4912,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4847,
									"end": 4912,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4837,
									"end": 4918,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4837,
									"end": 4918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4837,
									"end": 4918,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4837,
									"end": 4918,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 4924,
									"end": 5231,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 4924,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4992,
									"end": 4993,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5002,
									"end": 5115,
									"name": "tag",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 5002,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5016,
									"end": 5022,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5013,
									"end": 5014,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5010,
									"end": 5023,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 5002,
									"end": 5115,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5002,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "88"
								},
								{
									"begin": 5002,
									"end": 5115,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5101,
									"end": 5102,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5096,
									"end": 5099,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5092,
									"end": 5103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5086,
									"end": 5104,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5082,
									"end": 5083,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5077,
									"end": 5080,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5073,
									"end": 5084,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5066,
									"end": 5105,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5038,
									"end": 5040,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5035,
									"end": 5036,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5031,
									"end": 5041,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5026,
									"end": 5041,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5026,
									"end": 5041,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5002,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 5002,
									"end": 5115,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5002,
									"end": 5115,
									"name": "tag",
									"source": 2,
									"value": "88"
								},
								{
									"begin": 5002,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5133,
									"end": 5139,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5130,
									"end": 5131,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5127,
									"end": 5140,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 5124,
									"end": 5126,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5124,
									"end": 5126,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "89"
								},
								{
									"begin": 5124,
									"end": 5126,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5213,
									"end": 5214,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5199,
									"end": 5202,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5195,
									"end": 5211,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5188,
									"end": 5215,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5124,
									"end": 5126,
									"name": "tag",
									"source": 2,
									"value": "89"
								},
								{
									"begin": 5124,
									"end": 5126,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4973,
									"end": 5231,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4973,
									"end": 5231,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4973,
									"end": 5231,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4973,
									"end": 5231,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4973,
									"end": 5231,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 5237,
									"end": 5417,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 5237,
									"end": 5417,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5285,
									"end": 5362,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5282,
									"end": 5283,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5275,
									"end": 5363,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5382,
									"end": 5386,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 5379,
									"end": 5380,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5372,
									"end": 5387,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5406,
									"end": 5410,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 5403,
									"end": 5404,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5396,
									"end": 5411,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5423,
									"end": 5525,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 5423,
									"end": 5525,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5423,
									"end": 5525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5515,
									"end": 5517,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5511,
									"end": 5518,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 5506,
									"end": 5508,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5499,
									"end": 5504,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5495,
									"end": 5509,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5491,
									"end": 5519,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5481,
									"end": 5519,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5481,
									"end": 5519,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5471,
									"end": 5525,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5471,
									"end": 5525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5471,
									"end": 5525,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5471,
									"end": 5525,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 5531,
									"end": 5653,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 5531,
									"end": 5653,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5604,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "93"
								},
								{
									"begin": 5622,
									"end": 5627,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5604,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 5604,
									"end": 5628,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 5604,
									"end": 5628,
									"name": "tag",
									"source": 2,
									"value": "93"
								},
								{
									"begin": 5604,
									"end": 5628,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5597,
									"end": 5602,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5594,
									"end": 5629,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 5584,
									"end": 5586,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "94"
								},
								{
									"begin": 5584,
									"end": 5586,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5644,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5640,
									"end": 5641,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5633,
									"end": 5645,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5584,
									"end": 5586,
									"name": "tag",
									"source": 2,
									"value": "94"
								},
								{
									"begin": 5584,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5574,
									"end": 5653,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5574,
									"end": 5653,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 1861,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e22184452819df0e3a4e12b5d81a427f92eba04f8a27762382a9b76dc4a2b75564736f6c63430008000033",
									".code": [
										{
											"begin": 202,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 202,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 202,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 202,
											"end": 1861,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 202,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 402,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "5F62CE3C9AEBD463C7A36AB1B244D2BB94F07A2C13889B3B687940EBC467B9B3"
										},
										{
											"begin": 1229,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1249,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1191,
											"end": 1250,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1250,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1191,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1256,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1256,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1191,
											"end": 1256,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1256,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1256,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1191,
											"end": 1256,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1312,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1362,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1363,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1437,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1421,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1416,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1409,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1444,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1486,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1523,
											"end": 1527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1518,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1528,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1641,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1575,
											"end": 1641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1700,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1707,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1575,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1615,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1700,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1553,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1694,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializationCalldata\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Anna Carroll\",\"kind\":\"dev\",\"methods\":{},\"title\":\"InitializedProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InitializedProxy.sol\":\"InitializedProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc15eeb888d421aa4dedf46768a0502590d88911cfe5750d3ab9f644a7e5ada95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f270653fd8d1a109e3e3aa77d5035a52f175b66604f924e0db1f71a5b38e708\",\"dweb:/ipfs/QmNiP7PvV47ahSvMwxCifeUExVNhyVXdd8Zu2hGz4XC32j\"]},\"contracts/InitializedProxy.sol\":{\"keccak256\":\"0x504e2faa466facb03fe92b29171dc79524477ea33cf4687378e838dce0862777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b614983ab56b3c595fff9d4986954d63bbef5f89b507590555c7136693acf928\",\"dweb:/ipfs/QmekNJUTVJTZgLF4CdoEGLSdBGTFjBhDuYJeQuoBc6AGVe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
					"exportedSymbols": {
						"StorageSlotUpgradeable": [
							59
						]
					},
					"id": 60,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:1148:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"
							},
							"fullyImplemented": true,
							"id": 59,
							"linearizedBaseContracts": [
								59
							],
							"name": "StorageSlotUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlotUpgradeable.AddressSlot",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "value",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "1273:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1273:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nodeType": "StructDefinition",
									"scope": 59,
									"src": "1244:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BooleanSlot",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "value",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "1328:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 6,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1328:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nodeType": "StructDefinition",
									"scope": 59,
									"src": "1299:46:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Bytes32Slot",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "value",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "1380:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 9,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1380:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nodeType": "StructDefinition",
									"scope": 59,
									"src": "1351:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Uint256Slot",
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "value",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "1435:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 12,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1435:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nodeType": "StructDefinition",
									"scope": 59,
									"src": "1406:49:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1637:63:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1656:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1670:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1680:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1670:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1680:4:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1647:47:0"
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "1461:87:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "slot",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1577:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:14:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1614:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$5_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.AddressSlot"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "AddressSlot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1614:11:0"
													},
													"referencedDeclaration": 5,
													"src": "1614:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$5_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:23:0"
									},
									"scope": 59,
									"src": "1553:147:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "1882:63:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1901:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1915:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1925:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1915:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 32,
														"isOffset": false,
														"isSlot": true,
														"src": "1915:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 28,
														"isOffset": false,
														"isSlot": false,
														"src": "1925:4:0",
														"valueSize": 1
													}
												],
												"id": 34,
												"nodeType": "InlineAssembly",
												"src": "1892:47:0"
											}
										]
									},
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1706:87:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "slot",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1822:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 27,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:14:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1859:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$8_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
												},
												"typeName": {
													"id": 31,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 30,
														"name": "BooleanSlot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "1859:11:0"
													},
													"referencedDeclaration": 8,
													"src": "1859:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$8_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1858:23:0"
									},
									"scope": 59,
									"src": "1798:147:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "2127:63:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2146:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2160:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2170:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2160:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 43,
														"isOffset": false,
														"isSlot": true,
														"src": "2160:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 39,
														"isOffset": false,
														"isSlot": false,
														"src": "2170:4:0",
														"valueSize": 1
													}
												],
												"id": 45,
												"nodeType": "InlineAssembly",
												"src": "2137:47:0"
											}
										]
									},
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1951:87:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "slot",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2067:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 38,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2066:14:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2104:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$11_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
												},
												"typeName": {
													"id": 42,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 41,
														"name": "Bytes32Slot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 11,
														"src": "2104:11:0"
													},
													"referencedDeclaration": 11,
													"src": "2104:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$11_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:23:0"
									},
									"scope": 59,
									"src": "2043:147:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "2372:63:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2391:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2405:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2415:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2405:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 54,
														"isOffset": false,
														"isSlot": true,
														"src": "2405:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 50,
														"isOffset": false,
														"isSlot": false,
														"src": "2415:4:0",
														"valueSize": 1
													}
												],
												"id": 56,
												"nodeType": "InlineAssembly",
												"src": "2382:47:0"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2196:87:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "slot",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2312:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 49,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:14:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2349:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$14_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
												},
												"typeName": {
													"id": 53,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 52,
														"name": "Uint256Slot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "2349:11:0"
													},
													"referencedDeclaration": 14,
													"src": "2349:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$14_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:23:0"
									},
									"scope": 59,
									"src": "2288:147:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 60,
							"src": "1207:1230:0"
						}
					],
					"src": "33:2405:0"
				},
				"id": 0
			},
			"contracts/InitializedProxy.sol": {
				"ast": {
					"absolutePath": "contracts/InitializedProxy.sol",
					"exportedSymbols": {
						"InitializedProxy": [
							128
						],
						"StorageSlotUpgradeable": [
							59
						]
					},
					"id": 129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 61,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
							"id": 62,
							"nodeType": "ImportDirective",
							"scope": 129,
							"sourceUnit": 60,
							"src": "59:78:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 63,
								"nodeType": "StructuredDocumentation",
								"src": "139:61:1",
								"text": " @title InitializedProxy\n @author Anna Carroll"
							},
							"fullyImplemented": true,
							"id": 128,
							"linearizedBaseContracts": [
								128
							],
							"name": "InitializedProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 66,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nodeType": "VariableDeclaration",
									"scope": 128,
									"src": "353:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 64,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "353:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835663632636533633961656264343633633761333661623162323434643262623934663037613263313338383962336236383739343065626334363762396233",
										"id": 65,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "402:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_43144295021417935051837557947996426778363640950046285255598121703510016244147_by_1",
											"typeString": "int_const 4314...(69 digits omitted)...4147"
										},
										"value": "0x5f62ce3c9aebd463c7a36ab1b244d2bb94f07a2c13889b3b687940ebc467b9b3"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "605:478:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "logic",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "625:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "642:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "634:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 75,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "634:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "634:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "625:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f7879203a3a204c6f676963616c20636f6e7472616374732063616e6e6f74206265207a65726f20616464726573736573",
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "645:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_57510bd80d7fea0885e45a6c6f320fd99c42e73bc906a953f05cdc1e6c625faa",
																"typeString": "literal_string \"Proxy :: Logical contracts cannot be zero addresses\""
															},
															"value": "Proxy :: Logical contracts cannot be zero addresses"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_57510bd80d7fea0885e45a6c6f320fd99c42e73bc906a953f05cdc1e6c625faa",
																"typeString": "literal_string \"Proxy :: Logical contracts cannot be zero addresses\""
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "617:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "617:82:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "617:82:1"
											},
											{
												"expression": {
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 86,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "748:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 83,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "710:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$59_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 25,
																"src": "710:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "710:59:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$5_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "710:65:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 89,
														"name": "logic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "778:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "710:73:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "710:73:1"
											},
											{
												"assignments": [
													93,
													95
												],
												"declarations": [
													{
														"constant": false,
														"id": 93,
														"mutability": "mutable",
														"name": "_ok",
														"nodeType": "VariableDeclaration",
														"scope": 109,
														"src": "879:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 92,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "879:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 95,
														"mutability": "mutable",
														"name": "returnData",
														"nodeType": "VariableDeclaration",
														"scope": 109,
														"src": "889:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 94,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "889:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [
														{
															"id": 98,
															"name": "initializationCalldata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "948:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 96,
															"name": "logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "929:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "929:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:93:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "_ok",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1051:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 105,
																	"name": "returnData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "1063:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1056:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 103,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "1056:6:1",
																	"typeDescriptions": {}
																}
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1056:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1043:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1043:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1043:32:1"
											}
										]
									},
									"id": 110,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "logic",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "538:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "initializationCalldata",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "562:35:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 69,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "562:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "527:77:1"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:0:1"
									},
									"scope": 128,
									"src": "516:567:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1164:580:1",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "_impl",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "1175:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 113,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1175:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 117,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1229:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 115,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "1191:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$59_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "1191:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1191:59:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$5_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "1191:65:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1175:81:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1276:461:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1291:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1308:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1302:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "1295:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1340:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1345:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1348:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1348:14:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1327:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1327:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1327:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1377:67:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1404:5:1"
																	},
																	{
																		"name": "_impl",
																		"nodeType": "YulIdentifier",
																		"src": "1411:5:1"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1418:3:1"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1423:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1423:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1439:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1442:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1391:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:53:1"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1381:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1458:28:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "1470:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:16:1"
															},
															"variables": [
																{
																	"name": "size",
																	"nodeType": "YulTypedName",
																	"src": "1462:4:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1515:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1520:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1523:4:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1500:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1500:28:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1582:59:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1612:3:1"
																						},
																						{
																							"name": "size",
																							"nodeType": "YulIdentifier",
																							"src": "1617:4:1"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1605:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1605:17:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1605:17:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1575:66:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1580:1:1",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1667:59:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1697:3:1"
																						},
																						{
																							"name": "size",
																							"nodeType": "YulIdentifier",
																							"src": "1702:4:1"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1690:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1690:17:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1690:17:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1659:67:1",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1551:6:1"
															},
															"nodeType": "YulSwitch",
															"src": "1544:182:1"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "1411:5:1",
														"valueSize": 1
													}
												],
												"id": 121,
												"nodeType": "InlineAssembly",
												"src": "1267:470:1"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:0:1"
									},
									"scope": 128,
									"src": "1136:608:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "1816:2:1",
										"statements": []
									},
									"id": 127,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:0:1"
									},
									"scope": 128,
									"src": "1789:29:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 129,
							"src": "202:1659:1"
						}
					],
					"src": "33:1830:1"
				},
				"id": 1
			}
		}
	}
}